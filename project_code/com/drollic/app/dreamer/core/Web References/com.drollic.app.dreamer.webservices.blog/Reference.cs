//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace com.drollic.app.dreamer.core.com.drollic.app.dreamer.webservices.blog {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DreamerBlogWebServiceBinding", Namespace="http://webservices.dreamer.app.drollic.com")]
    public partial class DreamerBlogWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SubmitDreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitVideoDreamOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DreamerBlogWebService() {
            this.Url = global::com.drollic.app.dreamer.core.Properties.Settings.Default.com_drollic_app_dreamer_core_com_drollic_www_DreamerBlogWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SubmitDreamCompletedEventHandler SubmitDreamCompleted;
        
        /// <remarks/>
        public event SubmitVideoDreamCompletedEventHandler SubmitVideoDreamCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.drollic.com/projects/dreamer/webservices/DreamerBlogWebServices.php/Su" +
            "bmitDream", RequestNamespace="http://webservices.dreamer.app.drollic.com", ResponseNamespace="http://webservices.dreamer.app.drollic.com")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string SubmitDream(string macaddress, string creator, string creatorURL, string title, string dreamURL, string originalURLs) {
            object[] results = this.Invoke("SubmitDream", new object[] {
                        macaddress,
                        creator,
                        creatorURL,
                        title,
                        dreamURL,
                        originalURLs});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitDreamAsync(string macaddress, string creator, string creatorURL, string title, string dreamURL, string originalURLs) {
            this.SubmitDreamAsync(macaddress, creator, creatorURL, title, dreamURL, originalURLs, null);
        }
        
        /// <remarks/>
        public void SubmitDreamAsync(string macaddress, string creator, string creatorURL, string title, string dreamURL, string originalURLs, object userState) {
            if ((this.SubmitDreamOperationCompleted == null)) {
                this.SubmitDreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitDreamOperationCompleted);
            }
            this.InvokeAsync("SubmitDream", new object[] {
                        macaddress,
                        creator,
                        creatorURL,
                        title,
                        dreamURL,
                        originalURLs}, this.SubmitDreamOperationCompleted, userState);
        }
        
        private void OnSubmitDreamOperationCompleted(object arg) {
            if ((this.SubmitDreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitDreamCompleted(this, new SubmitDreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.drollic.com/projects/dreamer/webservices/DreamerBlogWebServices.php/Su" +
            "bmitVideoDream", RequestNamespace="http://webservices.dreamer.app.drollic.com", ResponseNamespace="http://webservices.dreamer.app.drollic.com")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string SubmitVideoDream(string macaddress, string creator, string title, string videoHTML) {
            object[] results = this.Invoke("SubmitVideoDream", new object[] {
                        macaddress,
                        creator,
                        title,
                        videoHTML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitVideoDreamAsync(string macaddress, string creator, string title, string videoHTML) {
            this.SubmitVideoDreamAsync(macaddress, creator, title, videoHTML, null);
        }
        
        /// <remarks/>
        public void SubmitVideoDreamAsync(string macaddress, string creator, string title, string videoHTML, object userState) {
            if ((this.SubmitVideoDreamOperationCompleted == null)) {
                this.SubmitVideoDreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitVideoDreamOperationCompleted);
            }
            this.InvokeAsync("SubmitVideoDream", new object[] {
                        macaddress,
                        creator,
                        title,
                        videoHTML}, this.SubmitVideoDreamOperationCompleted, userState);
        }
        
        private void OnSubmitVideoDreamOperationCompleted(object arg) {
            if ((this.SubmitVideoDreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitVideoDreamCompleted(this, new SubmitVideoDreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SubmitDreamCompletedEventHandler(object sender, SubmitDreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitDreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitDreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SubmitVideoDreamCompletedEventHandler(object sender, SubmitVideoDreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitVideoDreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitVideoDreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591